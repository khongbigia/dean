<?xml version='1.0' encoding='UTF-8' ?>
<!-- was: <?xml version="1.0" encoding="UTF-8"?> -->
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:context="http://www.springframework.org/schema/context"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:security="http://www.springframework.org/schema/security"
       xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
       http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
       http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.2.xsd
       http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.0.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.1.xsd">

    <!--bean id="propertyConfigurer"
          class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer"
          p:location="/WEB-INF/jdbc.properties" />

		<bean id="dataSource"
		    class="org.springframework.jdbc.datasource.DriverManagerDataSource"
		    p:driverClassName="${jdbc.driverClassName}"
		    p:url="${jdbc.url}"
		    p:username="${jdbc.username}"
		    p:password="${jdbc.password}" /-->
		    
		    
    <bean name="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName" value="com.mysql.jdbc.Driver" />
        <property name="url" value="jdbc:mysql://localhost:3306/social_network" />
        <property name="username" value="root" />
        <property name="password" value="123456" />
    </bean>

    <!-- ADD PERSISTENCE SUPPORT HERE (jpa, hibernate, etc) -->
    <bean id="passwordEncoder" class="org.springframework.security.authentication.encoding.ShaPasswordEncoder">
  		<constructor-arg value="256" /> 
 	</bean>
 	<bean id="saltSource" class="org.springframework.security.authentication.dao.ReflectionSaltSource"
  		p:userPropertyToUse="email"/>
  	
  	<!--<bean id="userDetailsService" class="com.datnguyen.socialnetwork.service.impl.UserDetailsServiceAdapter"/>
  	<bean id="usersDao" class="com.datnguyen.socialnetwork.dao.hbn.HbnUsersDao"/>
  	<bean id="usersService" class="com.datnguyen.socialnetwork.service.impl.UsersServiceImpl"/> -->
  		
    <security:authentication-manager>
	 	 <security:authentication-provider user-service-ref="userDetailsService" > 
	 		<security:password-encoder ref="passwordEncoder">
	 			<security:salt-source ref="saltSource"/>
	 		</security:password-encoder> 
		</security:authentication-provider>
	</security:authentication-manager> 
	
	<security:http use-expressions="true">
		<security:intercept-url pattern="/login" />
		<security:form-login login-page="/login"
			authentication-failure-url="/login?error"
			default-target-url="/mainpage" />
		<security:remember-me />
		<security:logout logout-success-url="/login" />
		<security:intercept-url pattern="/mainpage" access="hasRole('user_role')" />
		<security:intercept-url pattern="/userSettings/**" access="hasRole('user_role')" />
		<security:intercept-url pattern="/user/**" access="hasRole('user_role')" />
		<security:intercept-url pattern="/avatar/**" access="hasRole('user_role')" />
		<security:intercept-url pattern="/websocket" access="hasRole('user_role')" />
	</security:http>
	<security:global-method-security secured-annotations="enabled" proxy-target-class="true"/>
	<!--<security:authentication-manager>
		<security:authentication-provider>
			<security:user-service>
				<security:user name="juan" password="p@ssword" authorities="user,admin" />
				<security:user name="elvira" password="p@ssword" authorities="user" />
			</security:user-service>
		</security:authentication-provider>
	</security:authentication-manager>
	
	<security:http auto-config="true">
		  <security:remember-me /> 
		<security:intercept-url pattern="/home" access="ROLE_USER" />
		<security:intercept-url pattern="/homeadmin" access="ROLE_ADMIN" />
		
		<security:form-login login-page="/login"  />
		<security:logout logout-success-url="/logout" />
		
		
	</security:http>-->
	
	<bean id="messageSource"
		class="org.springframework.context.support.ReloadableResourceBundleMessageSource"
		p:basename="/WEB-INF/messages" />
		
	<!-- now setup an authenticated session -->
	<bean id="smtpAuthenticator"
		class="forums.mailtest.SmtpAuthenticator">
		<constructor-arg value="vun4822@gmail.com" />
		<constructor-arg value="Ilovehightech123" />
	</bean>
	
	<bean id="mailSession" class="javax.mail.Session"
		factory-method="getInstance">
		<constructor-arg>
			<props>
				<prop key="mail.smtp.auth">true</prop>
				<prop key="mail.smtp.socketFactory.port">465</prop>
				<prop key="mail.smtp.socketFactory.class">
					javax.net.ssl.SSLSocketFactory
				</prop>
				<prop key="mail.smtp.socketFactory.fallback">
					false
				</prop>
			</props>
		</constructor-arg>
		<constructor-arg ref="smtpAuthenticator" />
	</bean>
	
	<bean id="mailSender"
		class="org.springframework.mail.javamail.JavaMailSenderImpl">
		<property name="host" value="smtp.gmail.com" />
		<property name="session" ref="mailSession" />
	</bean>
	
	<bean id="velocityEngine"
		class="org.springframework.ui.velocity.VelocityEngineFactoryBean"
		p:resourceLoaderPath="WEB-INF/velocity/" />
	
	<util:properties id="contactServiceProps" location="WEB-INF/contactService.properties" />
	<!--  
	<bean id="recaptcha" class="net.tanesha.recaptcha.ReCaptchaImpl">
 		<property name="privateKey" value="6LfflgETAAAAACaia3iVhhwqZZLgl4ZtRmUuPIkY"></property>
	</bean>
	-->
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
      	<property name="packagesToScan" value="com.datnguyen.socialnetwork.model" />
	
		<property name="hibernateProperties">
	            <props>
	                <prop key="hibernate.dialect">org.hibernate.dialect.MySQL5Dialect</prop>
	                <prop key="hibernate.show_sql">true</prop>
					<prop key="hibernate.hbm2ddl.auto">update</prop>
	            </props>
		</property>
    </bean>
    
    <bean id="transactionManager"
        class="org.springframework.orm.hibernate4.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory" />
    </bean> 
   	
   	<context:annotation-config />
   	
    <tx:annotation-driven/>

    <context:component-scan base-package="com.datnguyen.socialnetwork.dao.hbn" />
    <context:component-scan base-package="com.datnguyen.socialnetwork.service.impl" />
    <context:component-scan base-package="com.datnguyen.socialnetwork.dao.hibernate" />
    
</beans>
